// **********************************************************************
//
// Copyright (c) 2003-2014 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `scriptapi.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(global, r)
{
    var require = typeof(r) === "function" ? r : function(){};
    require("Ice/Object");
    require("Ice/ObjectPrx");
    require("Ice/Operation");
    require("Ice/Long");
    require("Ice/HashMap");
    require("Ice/HashUtil");
    require("Ice/ArrayUtil");
    require("Ice/StreamHelpers");
    
    var Ice = global.Ice || {};
    require("nice");
    
    var nice = global.nice || {};
    nice.api = nice.api || {};

    nice.api.ScriptApiManager = Slice.defineObject(
        undefined,
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::ScriptApiManager"
        ],
        -1, undefined, undefined, false);

    nice.api.ScriptApiManagerPrx = Slice.defineProxy(Ice.ObjectPrx, nice.api.ScriptApiManager.ice_staticId, undefined);

    Slice.defineOperations(nice.api.ScriptApiManager, nice.api.ScriptApiManagerPrx,
    {
        "getAPI": [, , , , , ["nice.api.ScriptApiPrx"], [[7]], , 
        [
            nice.api.exceptions.PermissionException
        ], , ]
    });

    nice.api.ScriptApi = Slice.defineObject(
        undefined,
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::ScriptApi"
        ],
        -1, undefined, undefined, false);

    nice.api.ScriptApiPrx = Slice.defineProxy(Ice.ObjectPrx, nice.api.ScriptApi.ice_staticId, undefined);

    Slice.defineOperations(nice.api.ScriptApi, nice.api.ScriptApiPrx);
    global.nice = nice;
}
(typeof (global) === "undefined" ? window : global, typeof (require) === "undefined" ? undefined : require));
